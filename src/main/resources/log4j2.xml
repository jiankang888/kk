<?xml version="1.0" encoding="UTF-8" ?>
<!-- 该xml配置中,xml元素大小写不敏感 -->
<!-- status="off",log4j2把自身事件记录到控制台的配置，off表示不记录，其余的记录有trace，debug，info，warn，error，fatal -->
<!-- monitorInterval表示检测更改配置的时间,单位是秒,最小间隔为5秒,0或负数表示不检测 -->
<!-- service_name 是maven打包传过来的 -->
<configuration name="${service_name}-log-config" status="off" monitorInterval="0">

    <!-- 常量引用 -->
    <properties>
        <property name="LOG_HOME">/home/work/log/${service_name}</property>
        <property name="FORMAT">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
        </property>
    </properties>

    <!-- appender用于接收各种日志 -->
    <appenders>

        <!-- 常见的输出到console,常用于开发环境中,默认是system_err,还有一个system_out -->
        <Console name="console" target="system_out">
            <!-- 添加过滤器ThresholdFilter,可以有选择的输出某个级别以上的类别  onMatch="ACCEPT" onMismatch="DENY"意思是匹配就接受,否则直接拒绝  -->
            <thresholdFilter level="info" onMatch="accept" onMismatch="deny"/>
            <patternLayout pattern="${FORMAT}"/>
        </Console>

        <!--         文件会打印出所有信息，这个log每次程序重新运行会自动清空，由append属性决定，适合临时测试用 -->
        <!--         append为TRUE表示消息增加到指定文件中，false表示消息覆盖指定的文件内容，默认值是true -->
        <!--
        <File name="testFile" fileName="${LOG_HOME}/test/${service_name}.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>
        -->

        <RollingFile name="rollingFile" fileName="${LOG_HOME}/${service_name}.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="${FORMAT}"/>
            <Policies>
                <!-- interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。 -->
                <!-- modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，则封存时间将以0点为边界进行偏移计算。 -->
                <!--设置每天打包日志一次-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志文件满10MB后打包-->
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="60"/>
        </RollingFile>

    </appenders>

    <!-- 接收appender -->
    <loggers>
        <!-- 3rd Loggers -->
        <!--
        logger中的name是指代码的包名或类名，路径要写全，可以配置不同包中的日志输出到不同的文件中。level是日志输出级别
        -->
        <logger name="java.sql.Connection" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <logger name="java.sql.Statement" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <logger name="java.sql.PreparedStatement" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>
        <logger name="java.sql.ResultSet" level="INFO" additivity="true">
            <appender-ref ref="console"/>
        </logger>

        <!-- root logger,一般用于放置所有的appender -->
        <!-- 日志输出级别(>=INFO级别的日志都输出) -->
        <asyncRoot level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="rollingFile"/>
            <!-- <appender-ref ref="testFile"/> -->
        </asyncRoot>
    </loggers>

</configuration>